<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>CryptoSoft Arbitrage Monitor</title>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 0;
            background: #f4f6fa;
            color: #222;
        }
        .container {
            max-width: 1100px;
            margin: 40px auto;
            background: #fff;
            border-radius: 14px;
            box-shadow: 0 4px 24px rgba(0,0,0,0.08);
            padding: 32px 36px 36px 36px;
        }
        h1 {
            color: #2a3b4c;
            font-size: 2.2em;
            margin-bottom: 0.2em;
        }
        h2 {
            color: #3a4a5c;
            margin-top: 2em;
            margin-bottom: 0.5em;
        }
        .fixed-table {
            border-collapse: collapse;
            width: 100%;
            min-width: 900px;
            max-width: 100%;
            background: #fafdff;
            border-radius: 8px;
            overflow: hidden;
            table-layout: fixed;
        }
        .fixed-table th, .fixed-table td {
            border: 1px solid #e3e8ee;
            padding: 10px 0;
            text-align: center;
            font-size: 1.05em;
            transition: background 0.3s;
            width: 110px;
            min-width: 110px;
            max-width: 110px;
            box-sizing: border-box;
        }
        .fixed-table th {
            background: #eaf1fb;
            color: #2a3b4c;
            font-weight: 600;
        }
        .fixed-table td {
            background: #fff;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        .fixed-table tr:hover td {
            background: #f3f8ff;
        }
        .arbs {
            background: #f7fafd;
            padding: 16px 18px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.03);
        }
        .arbs ul {
            margin: 0;
            padding-left: 18px;
        }
        .arbs li {
            margin-bottom: 7px;
            font-size: 1.08em;
        }
        .stats {
            background: #e7f7e7;
            padding: 14px 18px;
            border-radius: 8px;
            font-size: 1.08em;
            box-shadow: 0 2px 8px rgba(0,0,0,0.03);
        }
        @media (max-width: 900px) {
            .container { padding: 10px; }
            .fixed-table { min-width: 500px; font-size: 0.95em; }
            .fixed-table th, .fixed-table td { min-width: 70px; max-width: 70px; width: 70px; }
        }
        @media (max-width: 600px) {
            .container { padding: 2px; }
            .fixed-table { min-width: 300px; font-size: 0.9em; }
            .fixed-table th, .fixed-table td { min-width: 50px; max-width: 50px; width: 50px; }
        }
    </style>
</head>
<body>
<div class="container">
<h1>CryptoSoft Arbitrage Monitor</h1>

<h2>Цены на биржах</h2>
<div id="prices"></div>

<h2>Арбитражные возможности</h2>
<div class="arbs" id="arbs"></div>

<h2>Статистика</h2>
<div class="stats" id="stats"></div>
</div>
<script>
// Фиксированный список токенов и бирж (можно брать из config.json)
const fixedTokens = ["BTCUSDT", "ETHUSDT", "BNBUSDT", "TRXUSDT", "XRPUSDT", "LTCUSDT", "DOGEUSDT", "SOLUSDT", "ADAUSDT", "MATICUSDT", "SHIBUSDT", "DOTUSDT", "AVAXUSDT", "USDTUSDT"];
const fixedExchanges = ["binance","kucoin","bybit","okx","huobi"];
function updatePrices() {
    fetch('/api/prices').then(r=>r.json()).then(data => {
        let html = '<table class="fixed-table"><tr><th>Токен</th>';
        for (let ex of fixedExchanges) html += `<th>${ex}</th>`;
        html += '</tr>';
        for (let token of fixedTokens) {
            html += `<tr><td>${token}</td>`;
            for (let ex of fixedExchanges) html += `<td id="cell-${token}-${ex}">-</td>`;
            html += '</tr>';
        }
        html += '</table>';
        document.getElementById('prices').innerHTML = html;
        // После отрисовки — обновляем значения
        for (let token of fixedTokens) {
            for (let ex of fixedExchanges) {
                let val = (data[token] && data[token][ex]!==undefined) ? data[token][ex] : undefined;
                let cell = document.getElementById(`cell-${token}-${ex}`);
                if (cell) cell.textContent = (val!==undefined?val.toFixed(6):'-');
            }
        }
    });
}
function updateArbs() {
    fetch('/api/arbs').then(r=>r.json()).then(data => {
        let html = '';
        if (data.length === 0) html = '<i>Нет выгодных арбитражных возможностей</i>';
        else html = '<ul>' + data.map(a=>`<li>${a}</li>`).join('') + '</ul>';
        document.getElementById('arbs').innerHTML = html;
    });
}
function updateStats() {
    fetch('/api/stats').then(r=>r.json()).then(data => {
        let html = `<b>Проверено маршрутов:</b> ${data.CheckedRoutes}<br>`+
                   `<b>Найдено арбитражей:</b> ${data.FoundArbs}<br>`+
                   `<b>Суммарная потенциальная прибыль:</b> ${data.TotalProfit.toFixed(2)} USD<br>`+
                   `<b>Максимальная прибыль за сделку:</b> ${data.MaxProfit.toFixed(2)} USD`;
        document.getElementById('stats').innerHTML = html;
    });
}
function updateAll() {
    updatePrices();
    updateArbs();
    updateStats();
}
setInterval(updateAll, 2000);
updateAll();
</script>
</body>
</html> 